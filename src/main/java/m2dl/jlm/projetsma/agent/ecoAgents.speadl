import m2dl.jlm.projetsma.agent.ICreateAgent
import m2dl.jlm.projetsma.environment.IEnvironment
import m2dl.jlm.projetsma.services.IMessagingService
import m2dl.jlm.projetsma.services.ISchedulingService
import sma.agent.EcoRoom
import sma.agent.EcoStudent
import sma.agent.EcoTeacher
import sma.ecoKnowledgeRoom.EcoKnowledgeRoom
import sma.ecoKnowledgeStudent.EcoKnowledgeStudent
import sma.ecoKnowledgeTeacher.EcoKnowledgeTeacher

namespace sma.ecoAgents {

	ecosystem EcoAgents {

		provides createAgent: ICreateAgent
		requires environment: IEnvironment
		requires messagingService: IMessagingService
		requires strategyService: ISchedulingService

		// A teacher is composed of a knowledge and his content
		species TeacherAgent(id: String) {

			use knowledgeS: ecoKnowledgeTeacher.KnowledgeTeacherS(id) {
			}
			use teacherS: ecoTeacher.TeacherS(id) {
				bind knowledge to knowledgeS.knowledge
			}
		}

		// A student is composed of a knowledge and his content
		species StudentAgent(id: String) {
			use knowledgeS: ecoKnowledgeStudent.KnowledgeStudentS(id) {
			}
			use studentS: ecoStudent.StudentS(id) {
				bind knowledge to knowledgeS.knowledge
			}
		}

		// A room is composed of a knowledge and his content
		species RoomAgent(id: String) {
			use knowledgeS: ecoKnowledgeRoom.KnowledgeRoomS(id) {
			}
			use roomS: ecoRoom.RoomS(id) {
				bind knowledge to knowledgeS.knowledge
			}
		}

		// The ecosystem knowledge allows to create a knowledge for each agent
		part ecoKnowledgeRoom: EcoKnowledgeRoom
		
		part ecoKnowledgeTeacher: EcoKnowledgeTeacher

		part ecoKnowledgeStudent: EcoKnowledgeStudent

		// The ecosystem teacher allows to create a teacher content for each teacherAgent
		part ecoTeacher: EcoTeacher {
			bind strategyService to strategyService
			bind messagingService to messagingService
		}

		// The ecosystem student allows to create a student content for each studentAgent
		part ecoStudent: EcoStudent {
			bind strategyService to strategyService
			bind messagingService to messagingService
		}

		// The ecosystem room allows to create a room content for each roomAgent
		part ecoRoom: EcoRoom {
			bind strategyService to strategyService
			bind messagingService to messagingService
		}
	}
}