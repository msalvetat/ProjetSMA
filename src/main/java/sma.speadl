import fr.irit.smac.libs.tooling.scheduling.contrib.twosteps.ITwoStepsAgent
import m2dl.jlm.projetsma.agent.ICreateAgent
import m2dl.jlm.projetsma.environment.IEnvironment
import m2dl.jlm.projetsma.services.IMessagingService
import m2dl.jlm.projetsma.services.ISchedulingService

namespace sma {

	component SMA {

		provides systemStrategy: ISchedulingService = services.systemStrategy
		provides environmentService: IEnvironment = environment.environment
		provides createAgent: ICreateAgent = agents.createAgent

		part environment: Environment {
		}

		part agents: EcoAgents {
			bind environmentService to environment.environment
			bind agentMessaging to services.agentMessaging
		}
		
		part services: Services {
		}

	}

	component Environment {

		provides environment: IEnvironment
	}

	ecosystem EcoAgents {
		
		provides createAgent: ICreateAgent
		requires environmentService: IEnvironment
		requires agentMessaging: IMessagingService

		species Teacher(id: String) {
			provides agent: ITwoStepsAgent
		}
	}

	component Services {

		provides systemStrategy: ISchedulingService
		provides agentMessaging: IMessagingService
	}

}